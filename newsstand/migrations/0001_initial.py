# Generated by Django 2.0.1 on 2018-02-19 01:38

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tblbonusset',
            fields=[
                ('set', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('tagid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tblBonusSet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblbuilding',
            fields=[
                ('region', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('when', models.DateTimeField()),
                ('id', models.PositiveIntegerField()),
                ('state', models.PositiveIntegerField()),
                ('next', models.DateTimeField(blank=True, null=True)),
                ('contributed', models.FloatField(blank=True, null=True)),
                ('buff1', models.PositiveIntegerField(blank=True, null=True)),
                ('buff2', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblBuilding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbccurvepoint',
            fields=[
                ('curve', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('step', models.PositiveIntegerField()),
                ('key', models.FloatField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'tblDBCCurvePoint',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcenchants',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('effect', models.CharField(blank=True, max_length=64, null=True)),
                ('gem', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblDBCEnchants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcitem',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name_enus', models.CharField(max_length=250)),
                ('name_dede', models.CharField(blank=True, max_length=250, null=True)),
                ('name_eses', models.CharField(blank=True, max_length=250, null=True)),
                ('name_frfr', models.CharField(blank=True, max_length=250, null=True)),
                ('name_itit', models.CharField(blank=True, max_length=250, null=True)),
                ('name_ptbr', models.CharField(blank=True, max_length=250, null=True)),
                ('name_ruru', models.CharField(blank=True, max_length=250, null=True)),
                ('quality', models.PositiveIntegerField()),
                ('level', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('class_field', models.PositiveIntegerField(db_column='class')),
                ('subclass', models.PositiveIntegerField()),
                ('icon', models.CharField(max_length=120)),
                ('stacksize', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('binds', models.PositiveIntegerField(blank=True, null=True)),
                ('buyfromvendor', models.PositiveIntegerField(blank=True, null=True)),
                ('selltovendor', models.PositiveIntegerField(blank=True, null=True)),
                ('auctionable', models.PositiveIntegerField(blank=True, null=True)),
                ('type', models.PositiveIntegerField(blank=True, null=True)),
                ('requiredlevel', models.PositiveIntegerField(blank=True, null=True)),
                ('requiredskill', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('display', models.PositiveIntegerField(blank=True, null=True)),
                ('flags', models.CharField(max_length=22)),
            ],
            options={
                'db_table': 'tblDBCItem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcitembonus',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('quality', models.PositiveIntegerField(blank=True, null=True)),
                ('level', models.SmallIntegerField(blank=True, null=True)),
                ('previewlevel', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('levelcurve', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('tagid', models.PositiveIntegerField(blank=True, null=True)),
                ('tagpriority', models.PositiveIntegerField(blank=True, null=True)),
                ('nameid', models.PositiveIntegerField(blank=True, null=True)),
                ('namepriority', models.PositiveIntegerField(blank=True, null=True)),
                ('socketmask', models.TextField(blank=True, null=True)),
                ('statmask', models.CharField(max_length=36)),
            ],
            options={
                'db_table': 'tblDBCItemBonus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcitemnamedescription',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('desc_enus', models.CharField(blank=True, max_length=120, null=True)),
                ('desc_dede', models.CharField(blank=True, max_length=120, null=True)),
                ('desc_eses', models.CharField(blank=True, max_length=120, null=True)),
                ('desc_frfr', models.CharField(blank=True, max_length=120, null=True)),
                ('desc_itit', models.CharField(blank=True, max_length=120, null=True)),
                ('desc_ptbr', models.CharField(blank=True, max_length=120, null=True)),
                ('desc_ruru', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'db_table': 'tblDBCItemNameDescription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcitemrandomsuffix',
            fields=[
                ('locale', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('suffix', models.CharField(max_length=120)),
            ],
            options={
                'db_table': 'tblDBCItemRandomSuffix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcitemreagents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.PositiveIntegerField()),
                ('skillline', models.PositiveSmallIntegerField()),
                ('reagent', models.PositiveIntegerField()),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=8)),
                ('spell', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblDBCItemReagents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcitemspell',
            fields=[
                ('item', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('spell', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tblDBCItemSpell',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcitemsubclass',
            fields=[
                ('class_field', models.PositiveIntegerField(db_column='class', primary_key=True, serialize=False)),
                ('subclass', models.PositiveIntegerField()),
                ('name_enus', models.CharField(max_length=250)),
                ('name_dede', models.CharField(blank=True, max_length=250, null=True)),
                ('name_eses', models.CharField(blank=True, max_length=250, null=True)),
                ('name_frfr', models.CharField(blank=True, max_length=250, null=True)),
                ('name_itit', models.CharField(blank=True, max_length=250, null=True)),
                ('name_ptbr', models.CharField(blank=True, max_length=250, null=True)),
                ('name_ruru', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'tblDBCItemSubClass',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcitemvendorcost',
            fields=[
                ('item', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('copper', models.PositiveIntegerField(blank=True, null=True)),
                ('npc', models.PositiveIntegerField(blank=True, null=True)),
                ('npccount', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblDBCItemVendorCost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcpet',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name_enus', models.CharField(max_length=250)),
                ('name_dede', models.CharField(blank=True, max_length=250, null=True)),
                ('name_eses', models.CharField(blank=True, max_length=250, null=True)),
                ('name_frfr', models.CharField(blank=True, max_length=250, null=True)),
                ('name_itit', models.CharField(blank=True, max_length=250, null=True)),
                ('name_ptbr', models.CharField(blank=True, max_length=250, null=True)),
                ('name_ruru', models.CharField(blank=True, max_length=250, null=True)),
                ('type', models.PositiveIntegerField()),
                ('icon', models.CharField(max_length=120)),
                ('npc', models.PositiveIntegerField(blank=True, null=True)),
                ('category', models.PositiveIntegerField(blank=True, null=True)),
                ('flags', models.PositiveIntegerField(blank=True, null=True)),
                ('power', models.SmallIntegerField(blank=True, null=True)),
                ('stamina', models.SmallIntegerField(blank=True, null=True)),
                ('speed', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblDBCPet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcrandenchants',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name_enus', models.CharField(max_length=64)),
                ('name_dede', models.CharField(blank=True, max_length=64, null=True)),
                ('name_eses', models.CharField(blank=True, max_length=64, null=True)),
                ('name_frfr', models.CharField(blank=True, max_length=64, null=True)),
                ('name_itit', models.CharField(blank=True, max_length=64, null=True)),
                ('name_ptbr', models.CharField(blank=True, max_length=64, null=True)),
                ('name_ruru', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'tblDBCRandEnchants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcskilllines',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tblDBCSkillLines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbldbcspell',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(max_length=512)),
                ('cooldown', models.PositiveIntegerField()),
                ('skillline', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('qtymade', models.DecimalField(decimal_places=2, max_digits=7)),
                ('yellow', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('crafteditem', models.PositiveIntegerField(blank=True, null=True)),
                ('expansion', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblDBCSpell',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblhousecheck',
            fields=[
                ('house', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('nextcheck', models.DateTimeField(blank=True, null=True)),
                ('lastdaily', models.DateField(blank=True, null=True)),
                ('lastcheck', models.DateTimeField(blank=True, null=True)),
                ('lastcheckresult', models.TextField(blank=True, null=True)),
                ('lastchecksuccess', models.DateTimeField(blank=True, null=True)),
                ('lastchecksuccessresult', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblHouseCheck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblitembonusesseen',
            fields=[
                ('item', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('bonus1', models.PositiveSmallIntegerField()),
                ('bonus2', models.PositiveSmallIntegerField()),
                ('bonus3', models.PositiveSmallIntegerField()),
                ('bonus4', models.PositiveSmallIntegerField()),
                ('observed', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tblItemBonusesSeen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblitemglobal',
            fields=[
                ('item', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('level', models.PositiveSmallIntegerField()),
                ('region', models.CharField(max_length=2)),
                ('median', models.DecimalField(decimal_places=0, max_digits=11)),
                ('mean', models.DecimalField(decimal_places=0, max_digits=11)),
                ('stddev', models.DecimalField(decimal_places=0, max_digits=11)),
            ],
            options={
                'db_table': 'tblItemGlobal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblitemhistorydaily',
            fields=[
                ('item', models.PositiveIntegerField()),
                ('house', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('when', models.DateField()),
                ('pricemin', models.PositiveIntegerField()),
                ('priceavg', models.PositiveIntegerField()),
                ('pricemax', models.PositiveIntegerField()),
                ('pricestart', models.PositiveIntegerField()),
                ('priceend', models.PositiveIntegerField()),
                ('quantitymin', models.PositiveIntegerField()),
                ('quantityavg', models.PositiveIntegerField()),
                ('quantitymax', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tblItemHistoryDaily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblitemhistorymonthly',
            fields=[
                ('item', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('house', models.PositiveSmallIntegerField()),
                ('level', models.PositiveSmallIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('mktslvr01', models.PositiveIntegerField(blank=True, null=True)),
                ('qty01', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr02', models.PositiveIntegerField(blank=True, null=True)),
                ('qty02', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr03', models.PositiveIntegerField(blank=True, null=True)),
                ('qty03', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr04', models.PositiveIntegerField(blank=True, null=True)),
                ('qty04', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr05', models.PositiveIntegerField(blank=True, null=True)),
                ('qty05', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr06', models.PositiveIntegerField(blank=True, null=True)),
                ('qty06', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr07', models.PositiveIntegerField(blank=True, null=True)),
                ('qty07', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr08', models.PositiveIntegerField(blank=True, null=True)),
                ('qty08', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr09', models.PositiveIntegerField(blank=True, null=True)),
                ('qty09', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr10', models.PositiveIntegerField(blank=True, null=True)),
                ('qty10', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr11', models.PositiveIntegerField(blank=True, null=True)),
                ('qty11', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr12', models.PositiveIntegerField(blank=True, null=True)),
                ('qty12', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr13', models.PositiveIntegerField(blank=True, null=True)),
                ('qty13', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr14', models.PositiveIntegerField(blank=True, null=True)),
                ('qty14', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr15', models.PositiveIntegerField(blank=True, null=True)),
                ('qty15', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr16', models.PositiveIntegerField(blank=True, null=True)),
                ('qty16', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr17', models.PositiveIntegerField(blank=True, null=True)),
                ('qty17', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr18', models.PositiveIntegerField(blank=True, null=True)),
                ('qty18', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr19', models.PositiveIntegerField(blank=True, null=True)),
                ('qty19', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr20', models.PositiveIntegerField(blank=True, null=True)),
                ('qty20', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr21', models.PositiveIntegerField(blank=True, null=True)),
                ('qty21', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr22', models.PositiveIntegerField(blank=True, null=True)),
                ('qty22', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr23', models.PositiveIntegerField(blank=True, null=True)),
                ('qty23', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr24', models.PositiveIntegerField(blank=True, null=True)),
                ('qty24', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr25', models.PositiveIntegerField(blank=True, null=True)),
                ('qty25', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr26', models.PositiveIntegerField(blank=True, null=True)),
                ('qty26', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr27', models.PositiveIntegerField(blank=True, null=True)),
                ('qty27', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr28', models.PositiveIntegerField(blank=True, null=True)),
                ('qty28', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr29', models.PositiveIntegerField(blank=True, null=True)),
                ('qty29', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr30', models.PositiveIntegerField(blank=True, null=True)),
                ('qty30', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mktslvr31', models.PositiveIntegerField(blank=True, null=True)),
                ('qty31', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblItemHistoryMonthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblitemlevelsseen',
            fields=[
                ('item', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('bonusset', models.PositiveIntegerField()),
                ('level', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'tblItemLevelsSeen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblitemsummary',
            fields=[
                ('house', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('item', models.IntegerField()),
                ('level', models.PositiveSmallIntegerField()),
                ('price', models.DecimalField(decimal_places=0, max_digits=11)),
                ('quantity', models.PositiveIntegerField()),
                ('lastseen', models.DateTimeField()),
            ],
            options={
                'db_table': 'tblItemSummary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblpet',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('json', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField()),
                ('type', models.PositiveIntegerField()),
                ('icon', models.CharField(max_length=120)),
                ('npc', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblPet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblpetglobal',
            fields=[
                ('species', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('region', models.CharField(max_length=2)),
                ('median', models.DecimalField(decimal_places=0, max_digits=11)),
                ('mean', models.DecimalField(decimal_places=0, max_digits=11)),
                ('stddev', models.DecimalField(decimal_places=0, max_digits=11)),
            ],
            options={
                'db_table': 'tblPetGlobal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblpetsummary',
            fields=[
                ('house', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('species', models.PositiveSmallIntegerField()),
                ('price', models.DecimalField(decimal_places=0, max_digits=11)),
                ('quantity', models.PositiveIntegerField()),
                ('lastseen', models.DateTimeField()),
            ],
            options={
                'db_table': 'tblPetSummary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblrealm',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('region', models.CharField(max_length=2)),
                ('slug', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('locale', models.CharField(blank=True, max_length=5, null=True)),
                ('house', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('canonical', models.CharField(blank=True, max_length=50, null=True)),
                ('ownerrealm', models.CharField(blank=True, max_length=100, null=True)),
                ('population', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblRealm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblsnapshot',
            fields=[
                ('house', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('updated', models.DateTimeField()),
                ('maxid', models.PositiveIntegerField(blank=True, null=True)),
                ('flags', models.CharField(max_length=9)),
            ],
            options={
                'db_table': 'tblSnapshot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblwowtoken',
            fields=[
                ('region', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('when', models.DateTimeField()),
                ('marketgold', models.PositiveIntegerField(blank=True, null=True)),
                ('timeleft', models.CharField(blank=True, max_length=9, null=True)),
                ('timeleftraw', models.PositiveIntegerField(blank=True, null=True)),
                ('result', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblWowToken',
                'managed': False,
            },
        ),
    ]
